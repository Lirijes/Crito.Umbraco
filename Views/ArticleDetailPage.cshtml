@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.ArticleDetailPage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Services;
@inject IUserService UserService;
@using Umbraco.Cms.Core.Models.PublishedContent;
@{
	Layout = "LayoutWithBreadcrumb.cshtml";
	var userService = UserService;
	var newsimage = Model.Value<IPublishedContent>("newsImage");
	
	var itemsPerPage = 3;
	var recentPostPerPage = 5;
	var pageNumber = 1;
	
	if(!int.TryParse(Context.Request.Query["page"], out pageNumber))
	    pageNumber = 1;
	
	var selection = Umbraco?.Content(Guid.Parse("7048572f-b53f-4a98-a585-fafabcc2349e"))?
        .ChildrenOfType("articleDetailPage")?
        .Where(x => x.IsVisible())
        .OrderByDescending(x => x.CreateDate).ToList();
        
    var totalItems = selection?.Count ?? 0;
    var pagedItems = selection?.Skip((pageNumber - 1) * itemsPerPage).Take(itemsPerPage);
    var pagedArticles = selection?.Skip((pageNumber - 1) * recentPostPerPage).Take(recentPostPerPage);
}

   <section class="article-details">
        <div class="container">
            <h1>@Model.Name</h1>
            <div class="article-header">
                <p>@Model.CreateDate.ToString("MMM dd, yyyy")</p>
                <div class="article-dot"></div>
                <p>@Model.Value("newsCategory")</p>
                <div class="article-dot"></div>
                <p>@Model.CreatorName(UserService)</p>
            </div>
            <div class="article-information">
                <div class="article-info">
                    <img class="article-image" src="@newsimage.Url()" alt="">
                    <p>@Model.Value("newsContent")</p>
                    <div class="article-tags">
                        @foreach(var tag in Model.Value<IEnumerable<string>>("newsTags")) 
                        {
                            <a class="article-tag" href="#">@tag</a>
                        }
                    </div>
                </div>
                <div class="find-articles">
                    <div class="search-input-box">
                        <div class="search-magnifying-glass">
                            <span class="magnifying-glass"><i class="fa-solid fa-magnifying-glass"></i></span>
                        </div>
                        <input class="search-input" type="text" placeholder="Type to search">
                    </div>
                    <div class="recent-posts">
                        <h4 class="find-articles-header">Recent Posts</h4>
                        @if(pagedArticles != null) 
                        {
                        	@foreach (var item in pagedArticles!)
                    	    {
                        	    var url = item.Url();
                        	    var date = item.CreateDate;
                        	    var title = item.Name();
                        	    
                    	        <a href="@Url.Content(url)"><h6>@title</h6></a>
                    	        <p>@date.ToString("dd, MMM")</p>
                        	}
                        }
                    </div>
                    <div class="article-categories">
                        <h4 class="find-articles-header">Categories</h4>
                        @{
                            //den listar ej alla categorier eller posts
                            var groupedByCategory = pagedItems
                            .GroupBy(x => x.Value<string>("newsCategory"))
                            .Select(group => new
                            {
                                Category = group.Key,
                                Count = group.Count()
                            })
                            .ToList();
                        }
                        
                        <ul>
                            @foreach (var category in groupedByCategory)
                            {
                                <li>
                                    <a class="categories-list" href="?category=@category.Category"><p>@category.Category<span> - @category.Count Posts</span></p></a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>
    
    <section class="article-news">
    <div class="container">
        <h5 class="small-heading">Article & News</h5>
        <div class="news-header">
            <h1>Get Every Single Articles & News</h1>
            <a class="article-btn transparent-btn btn-theme" href="/news">Browse Articles<i class="fa-solid fa-arrow-up-right"></i></a>
        </div>
        <div class="article-news-cards">
            
        @if(pagedItems != null) 
        {
        	@foreach (var item in pagedItems!)
    	    {
        	    var url = item.Url();
        	    var date = item.CreateDate;
        	    var image = item.Value<IPublishedContent>("newsImage");
        	    var category = item.Value("newsCategory");
        	    var title = item.Name();
        	    var peamble = item.Value("newsPreamble");
        	
            
        	    <a class="article-card" href="@url">
                    <div class="article-card-body">
                        <img class="article-card-img" src="@image?.Url()" alt="">
                        <div class="article-card-date">
                            <h5>@date.ToString("dd")</h5>
                            <p class="month">@date.ToString("MMM")</p>
                        </div>
                        <h5 class="article-card-category">@category</h5>
                        <h2 class="article-card-header">@title</h2>
                        <p class="article-card-text">@peamble</p>
                    </div>
                </a>
        	}
        }
        </div>
        
        <div class="dots">
            <nav aria-label="Page navigation">
                @if (pageNumber > 1)
                {
                    <a href="?page=@(pageNumber - 1)" class="item-link link-prev" aria-label="Previous"></a>
                }
        
                @for (int i = 1; i <= Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
                {
                    <a href="?page=@i" class="item-link @(i == pageNumber ? "active" : "")"><span aria-hidden="true">&#8226;</span></a>
                }
            
                @if (pageNumber < Math.Ceiling((decimal)totalItems / itemsPerPage))
                {
                    <a href="?page=@(pageNumber + 1)" class="item-link link-next" aria-label="Next"></a>
                }
            </nav>
        </div>
    </div>
</section>

